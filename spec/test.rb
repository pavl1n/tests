require 'rspec/autorun'
require_relative '../lib/time_intersection'

describe Time do
  it 1 do
    time = Example.new([['10:00', '10:20'], ['10:40', '11:00'], ['10:50', '12:00'], ['12:00', '13:00'], ['10:00', '10:20']])
    expect(time.convert).to eq([[["10:40", "10:50"], ["11:00", "12:00"]]])
  end

  it 2 do
    time = Example.new([['10:00', '10:50'], ['10:40', '10:59'], ['10:50', '11:00'], ['10:40', '13:00'], ['10:00', '10:20']])
    expect(time.convert).to eq([[["10:00", "10:40"], ["10:50", "10:59"]], [["10:00", "10:40"], ["10:50", "13:00"]], [["10:00", "10:20"], ["10:20", "10:50"]], [["10:40", "10:50"], ["10:59", "11:00"]], [["10:40", "10:59"], ["10:59", "13:00"]]])
  end

  it 3 do
    time = Example.new([['10:40', '13:00'], ['10:20', '11:00'], ['15:30', '15:38'], ['12:00', '15:33']])
    expect(time.convert).to eq([[["10:20", "10:40"], ["11:00", "13:00"]], [["10:40", "12:00"], ["13:00", "15:33"]], [["12:00", "15:30"], ["15:33", "15:38"]]])
  end

  it 4 do
    time = Example.new([['14:00', '15:00'], ['14:49', '15:01'], ['10:20', '13:00'], ['8:30', '10:30']])
    expect(time.convert).to eq([[["14:00", "14:49"], ["15:00", "15:01"]], [["10:20", "10:30"], ["13:00", "8:30"]]])
  end

  it 5 do
    time = Example.new([['16:00', '16:45'], ['16:30', '17:00'], ['15:20', '17:30'], ['16:10', '16:50']])
    expect(time.convert).to eq([[["16:00", "16:30"], ["16:45", "17:00"]], [["16:00", "16:10"], ["16:45", "16:50"]], [["16:10", "16:30"], ["16:50", "17:00"]], [["15:20", "16:10"], ["16:50", "17:30"]]])
end

  it 'no method error should pass' do
    time = Example.new([])
    expect { time.foo }.to raise_error(NameError)
  end

  it 'not valid data to raise ArgumentError should pass' do
    time = Example.new([['string', '18:20'], ['16:40', '18:20']])
    expect { time.convert }.to raise_error(ArgumentError)
  end

end
